plugins {
    id 'java'
    id 'application'
    id 'jacoco'
}

repositories {
    jcenter()
}

dependencies {
    implementation("com.google.guava:guava:29.0-jre")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'quartz.Main'
        )
    }
}

// this is a big hack because Gradle can't find the classes in src/main when compiling src/test
sourceSets {
    test {
        java.srcDirs = ['src/main/', 'src/test/']
    }
}

tasks.withType(JavaCompile).all {
    options.compilerArgs.add("-Xlint:all")
}

test {
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }

    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

test.finalizedBy jacocoTestReport

// Define the main class for the application
mainClassName = 'quartz.Main'
